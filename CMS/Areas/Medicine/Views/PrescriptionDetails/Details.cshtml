@using CMS.Models
@inject IHttpContextAccessor _httpContextAccessor
@model BALibrary.Prescription.PrescriptionDetail

@{
    ViewData["Title"] = "Details";
    Layout = "~/Areas/Dashboard/Views/Shared/_Layout.cshtml";
    string pageName = ViewContext.RouteData.Values["controller"].ToString();
    string areaName = ViewContext.RouteData.Values["area"].ToString();
    int userRoleId = Convert.ToInt32(_httpContextAccessor.HttpContext.Session.GetString(SessionVariable.SessionKeyUserRoleId));

}

<h1>Details</h1>

<div>
    <h4>PrescriptionDetail</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.MedicineName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.MedicineName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Brand)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Brand)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PrescribedAmount)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PrescribedAmount)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.OtherDetail)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.OtherDetail)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Prescription)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Prescription.Id)
        </dd>
    </dl>
</div>
<div>
    @if (Common.isAuthorized(userRoleId, areaName, pageName, "Edit"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
    }|
    <a href='javascript:history.go(-1)'>Back to List</a>
</div>
