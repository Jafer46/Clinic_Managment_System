@using CMS.Models
@inject IHttpContextAccessor _httpContextAccessor
@model BALibrary.Patient.RecordSummary

@{
    ViewData["Title"] = "Details";
    Layout = "~/Areas/Dashboard/Views/Shared/_Layout.cshtml";
    string pageName = ViewContext.RouteData.Values["controller"].ToString();
    string areaName = ViewContext.RouteData.Values["area"].ToString();
    int userRoleId = Convert.ToInt32(_httpContextAccessor.HttpContext.Session.GetString(SessionVariable.SessionKeyUserRoleId));

}

<h1>Details</h1>

<div>
    <h4>RecordSummary</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Session)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Session.Id)
        </dd>
    </dl>
</div>
<div>
    @if (Common.isAuthorized(userRoleId, areaName, pageName, "Edit"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
    }|
    <a asp-action="Index">Back to List</a>
</div>
